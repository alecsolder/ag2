[metadata]
license_file = "LICENSE"
description-file = "README.md"


[tool.pytest.ini_options]
addopts = '--cov=. --cov-append --cov-branch --cov-report=xml -m "not conda"'
markers = ["conda: test related to conda forge distribution"]

[tool.black]
# https://github.com/psf/black
line-length = 120
exclude = "(.eggs|.git|.hg|.mypy_cache|.venv|_build|buck-out|build|dist)"


[tool.ruff]
fix = true
line-length = 120
# target-version = 'py39'
#include = ["autogen", "test", "docs"]
#exclude = []

[tool.ruff.lint]
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "E",     # pycodestyle errors     https://docs.astral.sh/ruff/rules/#error-e
    "W",     # pycodestyle warnings   https://docs.astral.sh/ruff/rules/#warning-w
    "C90",   # mccabe                 https://docs.astral.sh/ruff/rules/#mccabe-c90
#    "N",     # pep8-naming            https://docs.astral.sh/ruff/rules/#pep8-naming-n
#    "D",     # pydocstyle             https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "I",     # isort                  https://docs.astral.sh/ruff/rules/#isort-i
    "F",     # pyflakes               https://docs.astral.sh/ruff/rules/#pyflakes-f
    "ASYNC", # flake8-async           https://docs.astral.sh/ruff/rules/#flake8-async-async
#    "C4",    # flake8-comprehensions  https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
#    "B",     # flake8-bugbear         https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "Q",     # flake8-quotes          https://docs.astral.sh/ruff/rules/#flake8-quotes-q
#    "T20",   # flake8-print           https://docs.astral.sh/ruff/rules/#flake8-print-t20
#    "SIM",   # flake8-simplify        https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
#    "PT",    # flake8-pytest-style    https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
#    "PTH",   # flake8-use-pathlib     https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
#    "TCH",   # flake8-type-checking   https://docs.astral.sh/ruff/rules/#flake8-type-checking-tch
#    "RUF",   # Ruff-specific rules    https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
#    "PERF",  # Perflint               https://docs.astral.sh/ruff/rules/#perflint-perf
]

ignore = ["E501", "F401", "F403", "C901",
    "E402",
    "E721",
    "ASYNC109",
    "E501",  # line too long, handled by formatter later
    "D100", "D101", "D102", "D103", "D104",
    "C901",  # too complex
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "docs",
    # This file needs to be either upgraded or removed and therefore should be
    # ignore from type checking for now
    "math_utils\\.py$",
    "**/cap/py/autogencap/proto/*",
]
unfixable = ["F401"]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.mypy]
files = [
    "autogen/logger",
    "autogen/exception_utils.py",
    "autogen/coding",
    "autogen/oai/openai_utils.py",
    "autogen/_pydantic.py",
    "autogen/function_utils.py",
    "autogen/io",
    "autogen/tools",
    "autogen/interop",
    "autogen/agentchat/realtime_agent",
    "test/test_pydantic.py",
    "test/test_function_utils.py",
    "test/io",
    "test/tools",
    "test/interop",
    "test/agentchat/realtime_agent",
]
exclude = [
    "autogen/math_utils\\.py",
    "autogen/oai/completion\\.py",
    "autogen/agentchat/contrib/compressible_agent\\.py",
    "autogen/agentchat/contrib/math_user_proxy_agent.py",
    "autogen/oai/openai_utils.py",
]

strict = true
ignore_missing_imports = true
install_types = true
non_interactive = true
plugins = ["pydantic.mypy"]

# remove after all files in the repo are fixed
follow_imports = "silent"

# from https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true

warn_unused_ignores = false

disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = true
